name: RTM Integration Tests

on:
  push:
    paths:
      - 'internal/rtm/**'
      - 'cmd/rtm/**'
      - '.github/workflows/rtm-tests.yml'
  pull_request:
    paths:
      - 'internal/rtm/**'
      - 'cmd/rtm/**'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Install dependencies
      run: go mod download
    
    - name: Run unit tests
      run: go test -v ./internal/rtm -run '^Test[^I][^n][^t]'
      
    - name: Run OAuth adapter tests
      run: go test -v ./internal/rtm -run TestOAuthFlow
    
    - name: Run integration tests
      run: go test -v ./internal/rtm -run Integration
      env:
        RTM_API_KEY: ${{ secrets.RTM_API_KEY }}
        RTM_API_SECRET: ${{ secrets.RTM_API_SECRET }}
    
    - name: Check test coverage
      run: |
        go test ./internal/rtm -coverprofile=coverage.out
        go tool cover -func=coverage.out
        
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        flags: rtm
        name: rtm-coverage
        
    - name: Lint code
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        args: ./internal/rtm/...

  e2e-test:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Start RTM server
      run: |
        go run cmd/rtm/main.go &
        sleep 5
      env:
        RTM_API_KEY: ${{ secrets.RTM_API_KEY }}
        RTM_API_SECRET: ${{ secrets.RTM_API_SECRET }}
        PORT: 8080
        DISABLE_AUTH: true
    
    - name: Run E2E test
      run: go run cmd/rtm/e2e_test.go
      env:
        SERVER_URL: http://localhost:8080
    
    - name: Check server health
      run: |
        curl -f http://localhost:8080/health || exit 1

  deploy-check:
    runs-on: ubuntu-latest
    needs: [test, e2e-test]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Verify deployment readiness
      run: |
        echo "✓ All tests passed"
        echo "✓ Ready for deployment"
        echo ""
        echo "To deploy:"
        echo "  fly deploy -c fly-rtm.toml"
