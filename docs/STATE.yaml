# STATE.yaml v7.6-claude-optimized
# λ=limitation φ=file ∇=implement ∅=missing †=workaround ‡=critical ✓=native
# MACHINE_CONTEXT_FOR_CLAUDE[not_human_readable]

‡RTM_AUTH_FLOW[FIXED_2025-07-27]:
  STATUS: ✓fixed_ux_flow→proper_auth_verification
  ‡RACE_CONDITION: ✓fixed→verify_before_callback
  ‡PRIMARY_ISSUE: ✓fixed→user_must_complete_rtm_auth_before_continue
  ‡SOLUTION: /rtm/check-auth_endpoint→polls_frob_status_every_2s
  ‡UX_IMPROVEMENTS: [continue_button_disabled_until_verified,visual_status_feedback,retry_mechanism]
  ‡NEW_ENDPOINTS: /rtm/check-auth→json{authorized:bool,pending:bool,error:string}
  ‡FLOW_FIXED: intermediate_page→check_auth_status→enable_continue→callback→verified_token
  
∇RTM_FUTURE_UX[TBD]:
  ∇USER_PROVIDED_CREDENTIALS: require_user_rtm_api_key+secret[not_server_env_vars]
  ∇PERMISSION_SCOPES: [read_only_option,designated_lists_filter,tag_restrictions]
  ∇AUTH_FLOW_REDESIGN: user_inputs_credentials→scoped_permissions→rtm_oauth
  RATIONALE: user_owns_credentials+granular_access_control
  DOCUMENTED: φdocs/AUTH_FLOWS.yaml→RTM_DEBUG_FINDINGS[2025-07-27]
  ISSUE: ✓RESOLVED_oauth_tests_failing_with_400
  ROOT_CAUSE: HTML_token_extraction_off_by_one
  PROBLEM: hardcoded_offset_26_incorrect_for_search_string
  FIX: use_len(searchStr)_instead_of_magic_number
  LEARNED: [avoid_magic_numbers,test_string_extraction,debug_first]

‡DEV_GUIDELINES:
  SESSION_PROTOCOL: ✓CHECK_STATE_YAML_FIRST→machine_optimized_context
  RTFM_MANDATE: ∅never_guess[check:STATE.yaml,reference/schema.ts,reference/llms-full.txt,actual_source]
  CODE_STANDARDS: [✓replace_not_duplicate,✓complete_functions_only,✓quality_first,✓explicit_gaps>technical_debt]
  TECHNICAL_APPROACH: [✓assume_bugs_in_our_code,✓streaming_http,✓transparency,✓unfiltered_counsel]
  VERIFICATION_REQUIRED: [✓check_actual_code,✓check_documentation,∅never_assume_functionality]
  STATE_YAML_PURPOSE: ✓machine_optimized_claude_context[not_human_documentation]

∞STATUS:
  MODE: everything_server[tools+resources+prompts✓]+debug_proxy✓
  BUILD: go build -o bin/cowpilot cmd/cowpilot/main.go
  ✓BUILD_DEBUG: go build -o bin/mcp-debug-proxy cmd/mcp-debug-proxy/main.go
  RUN: ./bin/cowpilot
  ✓RUN_DEBUG: make run-debug-proxy
  TEST: npx @modelcontextprotocol/inspector ./bin/cowpilot
  ✓TEST_DEBUG: npx @modelcontextprotocol/inspector http://localhost:8080
  ✓TESTING: [testutil.Assert→human_readable✓,gotestsum→format_testdox✓,main_test→BDD_scenarios✓,make_test→simplified✓,scenario_output→descriptive✓,protocol_compliance→comprehensive✓]
  ✓TEST_SCRIPTS: [φscripts/test/run-tests.sh→unified_runner,project-health-check✓,mcp-protocol-smoke-test✓,transport-diagnostics✓,debug-integration✓,gotestsum_formatting✓,✓test-mcp-integration.sh→NEW]
  ✓DEPLOY_SCRIPTS: [φscripts/deploy/deploy-debug-to-fly.sh→automated_deployment,check-status.sh→health_verification,monitor-registration.sh→live_debugging]
  ✓FIXED_RAW_TEST: [scenario-test-raw→localhost_server✓,makefile_updated→auto_start_stop✓]
  FIXED: [resource_handler→[]mcp.ResourceContents,prompt_Arguments→map[string]string,MimeType→MIMEType,CallToolRequest.Params.Arguments→type_assert_map[string]any]✓
  CLEANED: [removed_unused_vars(samplePrompts,sampleResources,subscriptions),removed_deprecated_handlers(4),cleaned_comments]✓
  ✓MIGRATION: [removed_internal/mcp+internal/transport→mark3labs/mcp-go_external_library]
  ✓TESTS_CLEANED: [deleted_broken_integration_test→imports_nonexistent_packages,kept_working_e2e_framework]
  ✓RESOLVED: go_vet_error→missing_internal/mcp_package[file_already_removed]
  ✓DEPLOYMENT: fly.io[single_instance,min_machines_running=1,auth_disabled=true]
  ✓CLAUDE_REGISTERED: https://cowpilot.fly.dev/mcp[tools_working✓]

✓DEBUG_SYSTEM:
  STATUS: ✓phase1_implemented→✓adr012_runtime_config_complete
  PLAN: φdocs/debug/mcp-conformance-plan.md
  PROBLEM: ∅rigorous_protocol_conformance+debug_capabilities
  PHASES: [✓conversation_logging,protocol_validation,security_monitoring,dashboard,automated_testing]
  ARCHITECTURE: ✓proxy_middleware[non_invasive,optional_enable,minimal_overhead]+✓runtime_configuration
  PRIORITY: ∇implement_adr012→runtime_debug_config
  ADR: φdocs/adr/010-mcp-debug-system-architecture.md✓+φdocs/adr/011-conditional-compilation-lightweight-debug.md†+φdocs/adr/012-runtime-debug-configuration.md✓
  STRATEGY: ✓runtime_configuration[env_vars]+bounded_storage[memory/file]+developer_friendly
  
✓PHASE1[conversation_logging]:
  DURATION: completed_july25_2025
  DELIVERABLES: [✓internal/debug/interceptor.go,✓internal/debug/storage.go,✓cmd/mcp-debug-proxy/]
  GOAL: ✓real_time_mcp_conversation_capture+analysis
  STATUS: ✓implemented→∇refactoring_for_runtime_config
  FEATURES: [✓sqlite_storage,✓message_interceptor,✓session_tracking,✓performance_monitoring,✓debug_proxy_server]
  REFACTOR: ∇runtime_config[MCP_DEBUG=true,bounded_storage,single_build]
  
✓PHASE2[protocol_validation]:
  DURATION: 2-3_weeks  
  COMPONENTS: [✓json_rpc_validator,✓tools_validation,✓resources_validation,✓prompts_validation_explicit]
  SECURITY: [✓parameter_injection_detection,✓access_pattern_flagging,✓error_sanitization]
  STATUS: ✓implemented
  
∇PHASE3[debug_dashboard]:
  TECH_STACK: [react_frontend,websocket_realtime,go_backend_api,chart_js_viz]
  FEATURES: [live_conversation_monitor,protocol_analysis,interactive_testing]
  STATUS: ∅pending_phase2
  
λMCP-GO:
  VERSION: github.com/mark3labs/mcp-go[current]
  ✓IMPORT_CHANGE: github.com/vcto/mcp-go→github.com/mark3labs/mcp-go[completed_migration]
  ∅MISSING: [SetCompletionHandler,SetLoggingHandler,ProgressNotifications]
  ✓EXISTS: [NewMCPServer,AddTool,AddResource,AddResourceTemplate,AddPrompt,ServeStdio,NewSSEServer]
  ‡STREAMABLE_HTTP_SESSION_MANAGEMENT:
    DEFAULT: InsecureStatefulSessionIdManager[uuid_based]
    FLOW: initialize→returns_Mcp-Session-Id_header→client_must_send_in_subsequent_requests
    VALIDATION: requires_mcp-session-{uuid}_format→returns_400_invalid_session_id
    STATELESS_MODE: server.WithStateLess(true)→no_session_validation
    CUSTOM: implement_SessionIdManager_interface
    IMPACTS: [per_session_tools,logging_levels,sse_notifications]
    SOURCE: /Users/vcto/Projects/mcp-go-main/server/streamable_http.go
  ‡MCP_INSPECTOR_TRANSPORT:
    AUTO_DETECTION: url_pattern_based[/mcp→http,/sse→sse,default→sse]
    CLI_FLAG: only_affects_output_format_not_transport
    FORCE_TRANSPORT: --transport_http|sse|stdio
    ISSUE: default_endpoint_/→uses_sse_not_http
    SOLUTIONS: [WithEndpointPath("/mcp"),--transport_http,WithStateLess(true)]
    SOURCE: /Users/vcto/Projects/inspector-main/cli/src/transport.ts
    ✓DOCUMENTED: φdocs/MCP_INSPECTOR_SESSION_ISSUE.md[comprehensive_reference]
  
∇TOOLS[11]:
  hello→"Hello,World!"
  echo[message:string]→"Echo:$message"
  add[a,b:number]→a+b
  get_time[format?:unix|iso|human]→time.Now()[default:iso]
  base64_encode[text:string]→base64(text)
  base64_decode[data:string]→decode(data)
  string_operation[text,operation:upper|lower|reverse|length]→transform(text)
  format_json[json:string,minify?:bool]→prettify|minify
  long_running_operation[duration?,steps?:number]→simulate_progress
  get_test_image[]→ImageContent{base64,image/png}
  get_resource_content[uri]→EmbeddedResource{TextResourceContents|BlobResourceContents}

✓RESOURCES[4]:
  example://text/hello→TextResourceContents{text/plain}
  example://text/readme→TextResourceContents{text/markdown}
  example://image/logo→BlobResourceContents{image/png}
  example://dynamic/{id}→TextResourceContents{application/json}[template]

✓PROMPTS[2]:
  simple_greeting→PromptMessage{user:greeting_request}
  code_review[language,code:required]→PromptMessage{user:review_request}

✓NATIVE_SUPPORT:
  RESOURCES: ✓native{AddResource,AddResourceTemplate,WithResourceCapabilities}
  PROMPTS: ✓native{AddPrompt,WithPromptCapabilities}
  COMPLETIONS: ∅not_implemented
  LOGGING: ∅not_implemented
  PROGRESS: ∅not_implemented[λno_api]

φMAIN: /Users/vcto/Projects/cowpilot/cmd/cowpilot/main.go
  ‡TRANSPORT: StreamableHTTP[stateless]→HTTP_POST+SSE_auto_detect
  ✓CONFIG: WithStateLess(true)→no_sessions✓testing_simplified
  ✓CLIENTS: [Inspector→HTTP,Browser→SSE,curl→HTTP]
  ✓FIXES: [inspector_--transport_http,json_rpc_tests,utc_time]
  PATTERN_TOOL: s.AddTool(mcp.NewTool(name,opts...),handler)
  PATTERN_MULTI: &mcp.CallToolResult{Content:[]interface{}{TextContent{},ImageContent{}}}
  PATTERN_ERROR: mcp.NewToolResultError(msg),nil
  PATTERN_EMBED: EmbeddedResource{Type:"resource",Resource:TextResourceContents{URI,MimeType,Text}}
  ✓MIDDLEWARE_STACK: [protocolDetectionMiddleware→debug→auth→cors→streamableServer]
  ✓ENDPOINTS: [/mcp,/health,/oauth/*,/.well-known/*]

‡DECISIONS:
  ✓LIBRARY: mcp-go[native_support]→tools+resources+prompts
  ✓APPROACH: native_api_usage>no_workarounds_needed
  RATIONALE: library_supports_features+clean_implementation
  
‡ACTIVE_BLOCKERS: 
  λMCP_GO: ∅[completions,logging,progress]
  ‡CLAUDE_AI: ∅[OAuth_DCR_testing_needed]
  ‡OAUTH_CSRF: ✓csrf_uses_session_cookies[must_copy_cookies_GET→POST]
  ‡TEST_ISSUES: ✓fixed[package_conflicts,missing_functions,csrf_cookie_flow]
  ‡CSRF_ARCHITECTURE_CONFLICT:
    PROBLEM: mixing_two_csrf_approaches[server_side_tokens+cookies]
    CURRENT: stateTokens_map_in_OAuthCallbackServer[in_memory_not_shared]
    ATTEMPTED: added_cookies_but_still_validating_against_memory_map
    ROOT_CAUSE: ValidateStateToken_checks_s.stateTokens[state]_not_cookie
    SOLUTION: pick_one_approach[prefer_cookies_for_stateless_deployment]
    LEARNED: [rtfm_before_changing,understand_data_flow,avoid_mixing_patterns]

SAMPLE_DATA:
  RES: {
    "example://text/hello": "Hello,World!This is a simple text resource from the everything server.",
    "example://text/readme": "# Everything Server\n\nThis is an example MCP server...",
    "example://image/logo": "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwAChwGA60e6kgAAAABJRU5ErkJggg=="
  }
  PROMPTS: {
    "simple_greeting": {args:∅,msg:"Please provide a friendly greeting for a new user joining our community."},
    "code_review": {args:{language:required,code:required},msg:"Please review the following $language code..."}
  }

‡CLAUDE_AI_INTEGRATION[2025-07-27]:
  GOAL: ✓enable_claude.ai_as_MCP_client[completed]
  ‡CONSTRAINT: claude.ai_CANNOT_access_local_servers[browser_security]
  ✓DEPLOYED: fly.io[auth_disabled,single_instance]
  ✓REGISTERED: claude.ai_connector[tools_visible✓]
  
  ✓P1_REMOTE_DEPLOYMENT[COMPLETE_2025-07-26]:
    STATUS: ✓fly.io_deployed+✓CORS_implemented→∇healthcheck_needed
    DELIVERABLES: [✓CORS_headers,✓health_endpoint,✓SSE_test_script]
    CORS_CONFIG: ✓Access-Control-Allow-Origin:https://claude.ai
    CORS_IMPL: ✓internal/middleware/cors.go[configurable_origins]
    TEST_SCRIPT: ✓scripts/test/test-sse-transport.sh
    DOCS: ✓docs/claude-integration/[README,deployment,troubleshooting]
    ‡FLY_HEALTH: ✓fixed[removed_experimental_cmd,startup_race_fixed,cors_bypass]
    READY_FOR: deployment+claude.ai_testing[pending_OAuth]
    
  ✓P2_OAUTH_IMPLEMENTATION[COMPLETE_2025-07-26]:
    STATUS: ✓implemented→testing_needed
    DELIVERABLES: [✓oauth_adapter,✓callback_server,✓middleware,✓csrf_protection]
    IMPLEMENTED:
      CALLBACK_SERVER: [✓timeouts,✓multiple_paths,✓graceful_shutdown]
      SECURITY: [✓csrf_tokens,✓one_time_use,✓token_expiry]
      MIDDLEWARE: [✓auth_bypass_for_oauth,✓bearer_validation]
      TESTS: [✓40+_unit_tests,✓scenario_tests,✓naming_convention]
    ISSUES_FIXED: [✓compilation_errors,✓linter_violations,✓unexported_fields]
    READY_FOR: claude.ai_integration_testing
    
  ✓P3_INTEGRATION_TEST[COMPLETE_2025-07-26]:
    DELIVERABLES: [✓tests/claude_connector_test.go,∇CI_integration]
    COVERAGE: [✓OAuth_flow,✓tool_calls,✓SSE_transport,✓error_handling,✓CORS_compliance,✓naming_compliance]
    FEATURES: [✓complete_oauth_simulation,✓sse_transport_verification,✓tool_execution,✓capability_discovery,✓error_scenarios]
    STATUS: ✓test_file_created→needs_execution_verification
    
  CONSTRAINTS:
    NAMING: no_punctuation_in_connector_name[spaces_OK]
    DESCRIPTION: >30_characters_required
    CONFIG: string_values_only[no_nested_objects]
    TRANSPORT: SSE+Streamable_HTTP_required

∇PROTOCOL_CONTRACTS[2025-07-26]:
  STATUS: ✓implemented→fixing_integration_tests
  φinternal/contracts/: [oauth.go,oauth_test_helpers.go,middleware.go,oauth_test.go]
  φdocs/reference/oauth-protocol-requirements.md: detailed_spec
  ‡OAUTH_REQUIREMENTS:
    GET_AUTHORIZE: [client_id,redirect_uri,state]→query_params
    POST_AUTHORIZE: [client_id,csrf_state,client_state,api_key]→form_body_NOT_query
    ‡CSRF_FLOW: GET_sets_cookie→POST_must_include_cookie
    TOKEN_ENDPOINT: [grant_type=authorization_code,code]→form_body
    BEARER_FORMAT: "Authorization: Bearer <token>"→space_required
  LEARNED:
    FORM_VS_QUERY: POST_params_must_be_in_form_body[common_mistake]
    COOKIE_JAR: tests_need_http.Client.Jar_for_csrf_cookies
    CONTRACT_TESTING: proactive_validation>reactive_debugging

∇DOCUMENTATION_PLAN:
  φdocs/claude-integration/
    ∇README.md: overview+quickstart
    ∇oauth-implementation.md: [flow_diagrams,token_management,refresh_logic]
    ∇troubleshooting.md: [common_errors,debug_steps,inspector_usage]
    ∇deployment.md: [fly.io_config,env_vars,monitoring]
  φdocs/reference/
    ∇oauth2_examples/: SDK_reference_implementations
    ∇claude_api_spec.md: callback_URLs,requirements
  EXISTING_SOLUTIONS:
    AUTH: [Cloudflare_MCP_hosting,Auth0_integration,Azure_APIM]
    EXAMPLES: [TypeScript_SDK,Python_SDK,fastmcp+mcpauth]
    PATTERNS: [DCR_flow,token_refresh,PKCE]

∇NEXT:
  ‡PRIORITY1: ✓MCP_foundation_testing[critical_brick]
    IMPLEMENTED:
      1. ✓tests/mcp_integration_test.go→comprehensive_coverage
      2. ✓scripts/test/test-mcp-integration.sh→automated_runner
      3. ✓fly.toml→single_instance_config
      4. ✓auth_disabled→simplified_testing
    RATIONALE: foundational_capability_must_be_maintained
    TEST_COVERAGE: [tools/list✓,tools/call✓,resources/list✓,resources/read✓,prompts/list✓]
    ‡TEST_STRATEGY: integration_tests_run_against_DEPLOYED_instance[https://cowpilot.fly.dev/mcp]
    DOCUMENTED: φdocs/TEST_STRATEGY.md[✓clear_distinction_local_vs_deployed]
  ‡PRIORITY2: ✓RTM_OAuth_bridge[frob_to_oauth_fixed]
    FIXED:
      1. ✓dynamic_redirect_uri→uses_actual_callback_from_request
      2. ✓csrf_cookie_flow→consistent_implementation
      3. ✓session_tracking→preserves_all_oauth_params
      4. ✓api_signature→proper_frob_auth_url
      5. ✓auto_popup→better_ux_flow
      6. ✓TokenResponse_types→added_auth/types.go
    LEARNED: [preserve_oauth_params,use_actual_redirect_uri,consistent_csrf_flow]
  PRIORITY3: ✓persistent_token_storage[SQLite_implemented]
    IMPLEMENTED:
      1. ✓TokenStoreInterface→swappable_implementations
      2. ✓SQLiteTokenStore→persistent_with_WAL_mode
      3. ✓CreateTokenStore→factory_with_env_config
      4. ✓fly_volume→cowpilot_data_at_/data
      5. ✓automatic_cleanup→24hr_expiry
    CONFIG: TOKEN_DB_PATH=/data/tokens.db
    DEPLOYMENT: fly volumes create cowpilot_data --size 1
  PRIORITY4: ✓runtime_protocol_validation[via_debug_proxy]
    IMPLEMENTED:
      1. ✓ValidateProto_config→MCP_VALIDATE_PROTOCOL=true
      2. ✓ValidateMode→monitor|enforce  
      3. ✓validation_integration.go→uses_protocol/validation
      4. ✓Validation_storage→violations_table+stats
      5. ✓Zero_overhead→when_disabled
    ENV_VARS: [MCP_VALIDATE_PROTOCOL,MCP_VALIDATE_MODE]
    VALIDATION: ValidatedMessageInterceptor+ValidationEngine
  PRIORITY5: ∇monitoring[usage_metrics]
  COMPLETED: [✓fly_deployment,✓claude_registration,✓auth_disabled,✓integration_tests]
  DEFERRED: [oauth_with_persistence,completions]
  
  ✓IMPLEMENTED: [fly.io_deployment,CORS_middleware,protocol_validation,11_tools]
  ∇REFACTOR: [implement_OAuth2,add_auth_endpoints]
  OPTIONS: [∇implement_OAuth‡|test_without_auth|research_Cloudflare_MCP]
  
‡VERIFY:
  ✓tools.len==11
  ✓echo("test")=="Echo: test"
  ✓add(2,3)==5
  ✓string_operation("hello","upper")=="HELLO"
  ✓base64_encode("test")==base64_decode("dGVzdA==")
  ✓get_test_image().Content[1].Type=="image"
  ✓resources.list().includes("example://text/hello")
  ✓prompts.get("code_review",{language:"go",code:"..."}).includes("review")
  ✓get_resource_content("example://image/logo").Content[1].Type=="resource"
  ✓FIXED: resource_handlers→return[]mcp.ResourceContents[interface]

≈CONTEXT[current_session_july27_2025]:
  ✓DEPLOYMENT: fly.io[single_instance,auth_disabled,persistent_tokens]
  ✓INTEGRATION_TESTS: all_passing→deployed_instance
  ✓COMPLETED: [P1_mcp_tests✓,P2_rtm_oauth✓,P3_sqlite_tokens✓,P4_validation✓]
  ✓PRODUCTION: persistent_volume[/data/tokens.db]+validation_ready
  ∇NEXT_OPTIONS: [RTM_credentials→fly_secrets,claude_ai_testing,practical_tools]
  CONFIDENCE: 🟢PRODUCTION_STABLE
  
✓SESSION_VALIDATED[july26_2025]:
  STATUS: 🟢PRODUCTION_READY
  GUIDELINES_REVIEWED: ✓session_protocol_acknowledged
  MAINTENANCE_FOCUS: ✓state_yaml_optimization_for_claude_performance
  BUILD: ✓clean_dependencies,✓comprehensive_tests,✓active_deployment
  ✓IMPLEMENTED: [WithStateLess(true),timeHandler_UTC_fix,inspector_--transport_http,test_logic_fixes]
  ✓DOCUMENTED: φdocs/MCP_INSPECTOR_SESSION_ISSUE.md[comprehensive_reference]
  CONFIDENCE: HIGH→session_management_resolved
  NEXT: [fix_csrf_session_cookies|verify_tests_pass|∇implement_adr012_runtime_config|production_hardening]
  
‡CONFIRMED_INSPECTOR_LIMITATION[2025-07-25]:
  FACT: MCP_Inspector_CANNOT_pass_tool_arguments_to_URL_servers
  ERROR_MSG: "Arguments cannot be passed to URL-based MCP server"
  TESTED: [echo,add,base64_encode,string_operation→ALL_FAIL]
  ROOT_CAUSE: inspector_design_limitation_not_bug
  ✓SOLUTION: use_raw_JSON_RPC_via_curl_for_ALL_tool_tests_with_arguments
  DECISION: ∅DO_NOT_REVISIT→documented_permanent_limitation
  PATTERN: tools_without_args→use_inspector|tools_with_args→use_curl_json_rpc

‡FILES_STRUCTURE[2025-07-27]:
  cmd/cowpilot/: [main.go,main_test.go]→primary_server
  cmd/mcp-debug-proxy/: main.go→debug_proxy
  internal/auth/: [oauth_adapter.go,middleware.go,token_store.go,csrf_token_test.go,oauth_callback_server.go]
  internal/debug/: [config.go,interceptor.go,storage.go,validation_integration.go]
  internal/middleware/: cors.go
  internal/rtm/: [client.go]→NEW_STARTED
  internal/validator/: [core.go,jsonrpc.go,mcp.go,security.go]
  internal/testutil/: [assertions.go,requests.go]
  internal/contracts/: [oauth.go,oauth_test_helpers.go,middleware.go,oauth_test.go]
  tests/: [claude_connector_test.go,oauth_scenario_test.go,test-runner.go,mcp_integration_test.go→NEW]
  scripts/test/: [run-tests.sh,test-sse-transport.sh,test-mcp-integration.sh→NEW]
  docs/: [STATE.yaml,adr/*,claude-integration/*,debug/*,reference/*,oauth-protocol-requirements.md]
